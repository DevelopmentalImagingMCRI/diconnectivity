#!/bin/bash -x

. `which DIConnEnv.sh`

H=`hostname`
if [ "$H" == "addo-MS-7A15" ]
then
	MRTRIX3BINDIR=$HOME/dev/mrtrix3/bin
fi
# extracts the base freesurfer label images for later seed generation
# puts the outputs in T1 and DWI space
# looks for existence of a non-linear warp and applies it, used in cases where no blip up/down images are available
export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=8

if [ -z "$1" -o -z "$2" ]
then
	echo "Usage: $0 <subject id> <mrtrixversion> [freesurferlong]"
else
	
	SUBJECTID=$1
	MRTRANSFORMVERSION=$2
	FREESURFERLONG=$3
	
	if [ ! -z "$FREESURFERLONG" ]
	then
		FREESURFERSUBJECT=$FREESURFERLONG
	else
		FREESURFERSUBJECT=$SUBJECTID
	fi
	INDIR=$DWIREGTOSTRUCT/${SUBJECTID}
	OUTDIR=$FREESURFERBASELABELS/$SUBJECTID
	
	rm -fr $OUTDIR
	mkdir -p $OUTDIR

	FILES=("rawavg" "aparc.a2009s+aseg" "aparc+aseg" "aparc.DKTatlas+aseg" "wmparc" "aparc.a2009s+aseg.first" "aparc+aseg.first" "aparc.DKTatlas+aseg.first")
	convert_xfm -omat $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv_dwiorient.mat -inverse $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_dwiorient.mat
	
	if [ "$MRTRANSFORMVERSION" = "3" ]
	then
		$MRTRIX3BINDIR/transformconvert -force $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv_dwiorient.mat $DWIREGTOSTRUCT/${SUBJECTID}/structural_brain_inverted_dwiorient.nii.gz $DWISKULLSTRIPPED/${SUBJECTID}.nii.gz flirt_import $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv_dwi_mrtrix.mat
	fi

	for i in "${FILES[@]}"
	do

		if [ -f "$FREESURFER/$FREESURFERSUBJECT/mri/${i}.mgz" ]
		then
# reslice the segmentation back to native T1 space
			mri_convert -rl $FREESURFER/$SUBJECTID/mri/orig/001.mgz -rt nearest $FREESURFER/$FREESURFERSUBJECT/mri/${i}.mgz $OUTDIR/${i}.nii.gz --no_scale 1 -odt int
			
# convert to dwispace
			SwapOrientToRef --use-ref-geom $OUTDIR/${i}.nii.gz $DWIREGTOSTRUCT/${SUBJECTID}/structural_brain_inverted_dwiorient.nii.gz $OUTDIR/${i}_dwiorient.nii.gz
			if [ "x`imglob $DWIREGTOSTRUCT/${SUBJECTID}/bzero_reg_with_flirt_init1InverseWarp.nii*`" != "x" ]
			then
				antsApplyTransforms -d 3 --input $OUTDIR/${i}_dwiorient.nii.gz --reference-image  $DWIREGTOSTRUCT/${SUBJECTID}/structural_brain_inverted_dwiorient.nii.gz --output $OUTDIR/${i}_linear_reg_dwiorient.nii.gz --transform $DWIREGTOSTRUCT/${SUBJECTID}/bzero_reg_with_flirt_init1InverseWarp.nii.gz --interpolation NearestNeighbor
			fi
			
			case $MRTRANSFORMVERSION in
			2)
				$MRTRIX2BINDIR/mrtransform $OUTDIR/${i}_linear_reg.nii.gz -transform $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg.mat -reference $DWIBZERO/${SUBJECTID}.nii.gz -inverse -flipx $OUTDIR/${i}_dwi.nii.gz
				;;
			3)
				$MRTRIX3BINDIR/mrtransform $OUTDIR/${i}_linear_reg_dwiorient.nii.gz -quiet -force -linear $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv_dwi_mrtrix.mat $OUTDIR/${i}_dwispace.nii.gz
				$MRTRIX3BINDIR/mrtransform $OUTDIR/${i}_linear_reg_dwiorient.nii.gz -quiet -force -linear $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv_dwi_mrtrix.mat -template mrtrixEddy/$SUBJECTID/fa.nii.gz -interp nearest $OUTDIR/${i}_dwispace_resliced.nii.gz
				$MRTRIX3BINDIR/mrtransform $OUTDIR/${i}_linear_reg_dwiorient.nii.gz -quiet -force -linear $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv_dwi_mrtrix.mat $OUTDIR/${i}_linearonly_dwispace.nii.gz
				;;
			0)
				flirt -applyxfm -in $OUTDIR/${i}_linear_reg -init $DWIREGTOSTRUCT/${SUBJECTID}/bzero_brain_linear_reg_inv.mat -ref $DWIBZERO/${SUBJECTID}  -out $OUTDIR/${i}_dwi -interp nearestneighbour
				;;
			esac
		fi
	done
fi
